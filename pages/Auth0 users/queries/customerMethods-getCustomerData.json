{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getCustomerData",
    "fullyQualifiedName": "customerMethods.getCustomerData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "organizationId": "627cbadbdcbbaa44d7ae6777",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Auth0 users",
    "collectionId": "Auth0 users_customerMethods",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  storeValue(\"customer_data\", []);\n  var data = getDataSources.data.values.map(row => {\n    return row;\n  });\n  storeValue(\"customer_data\", data);\n  var dataSourceOptions = data.map(row => {\n    var accounts = row.accounts.map(row => {\n      return {\n        'label': row,\n        'value': row\n      };\n    });\n    storeValue(`dataSource_${row.name}_accounts`, accounts);\n    var dataServices = row.dataServices.names.map(row => {\n      return {\n        'label': row,\n        'value': row\n      };\n    });\n    storeValue(`dataSource_${row.name}_dataServices`, dataServices);\n    return {\n      'label': row.name,\n      'value': row.name\n    };\n  });\n  storeValue(\"dataSourceOptions\", dataSourceOptions);\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  storeValue(\"customer_data\", []);\n  var data = getDataSources.data.values.map(row => {\n    return row;\n  });\n  storeValue(\"customer_data\", data);\n  var dataSourceOptions = data.map(row => {\n    var accounts = row.accounts.map(row => {\n      return {\n        'label': row,\n        'value': row\n      };\n    });\n    storeValue(`dataSource_${row.name}_accounts`, accounts);\n    var dataServices = row.dataServices.names.map(row => {\n      return {\n        'label': row,\n        'value': row\n      };\n    });\n    storeValue(`dataSource_${row.name}_dataServices`, dataServices);\n    return {\n      'label': row.name,\n      'value': row.name\n    };\n  });\n  storeValue(\"dataSourceOptions\", dataSourceOptions);\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Auth0 users_customerMethods.getCustomerData",
  "deleted": false,
  "gitSyncId": "619b52a196d9bd0082a4d931_61def1e4dd80ea520d453725"
}