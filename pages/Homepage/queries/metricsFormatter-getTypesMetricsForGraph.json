{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "getTypesMetricsForGraph",
    "fullyQualifiedName": "metricsFormatter.getTypesMetricsForGraph",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "organizationId": "627cbadbdcbbaa44d7ae6777",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Homepage",
    "collectionId": "Homepage_metricsFormatter",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let data = getMetrics.data;\n  if (!data || !data.typeMetrics) {\n    return [];\n  }\n  data = data.typeMetrics;\n  let graphData = [];\n  for (let type of data) {\n    graphData.push({\n      x: type.type,\n      y: type.totaloperations\n    });\n  }\n  return graphData;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  let data = getMetrics.data;\n  if (!data || !data.typeMetrics) {\n    return [];\n  }\n  data = data.typeMetrics;\n  let graphData = [];\n  for (let type of data) {\n    graphData.push({\n      x: type.type,\n      y: type.totaloperations\n    });\n  }\n  return graphData;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Homepage_metricsFormatter.getTypesMetricsForGraph",
  "deleted": false,
  "gitSyncId": "6226c7facc223365f5cb4c67_622841efcc223365f5cb4cf3"
}